#!/bin/sh

set -e

DOE_DIR=doe
DOE_BASEDIR=~
DOE_HOMEDIR=${DOE_BASEDIR}/$DOE_DIR
DOE_CFGDIR=$DOE_HOMEDIR/etc
DOE_TMPDIR=$DOE_HOMEDIR/.tmp
DOE_MODDIR=$DOE_HOMEDIR/modules
DOE_BACKUPDIR=$DOE_HOMEDIR/.install/.backup

RED='\033[0;31m'	# Cyan color 
NC='\033[0m'		# No Color

. ${DOE_CFGDIR}/doe.conf

# Call module and functions files with  additional parametr
call_module()
{
    case $1 in
	list-modules)
		list_modules		# show list of available modules for autocompetion
		;;
	version)
		cat $DOE_CFGDIR/doe-release
		;;
	$1)
		if [ -d "${DOE_MODDIR}/$1" ]
		then
		    call_module_function "$@" || echo "${RED}Usage:\n\tdoe $1 <function>\n\n\tfunctions = { $(list_module_functions $1) }${NC}" && exit 0
		else
		    return 1
		fi
		;;
    esac
}

call_module_function()
{
    case $2 in
	list-functions)
		list_module_functions "$1"
		;;
	$2)
		m_f="${DOE_MODDIR}/$1/$1.$2"
#		shift 2

		if [ -f "${m_f}" ]
		then
		    shift
		    . "${m_f}" "$@"
		else
		    return 1
		fi
    esac
}

list_modules()
{
    # no_args
    # Find all dirictories ("modules") in the directory with all modules
    # Replace all newlines with space
    # return $string
    echo "$(cd $DOE_MODDIR; find * -type d -maxdepth 0 2>/dev/null  | tr '\n' ' ')"
}

list_module_functions()
{
    # argv[1] = $1 = module_name
    # Find all files ("functions") in the module directory
    # Cut module name
    # Replace all newlines with space
    # return $string
    echo "$(cd $DOE_MODDIR/$1; find * -type f -maxdepth 0 2>/dev/null | cut -d'.' -f2 | tr '\n' ' ')"
}


################################################################################
#
# [raccoon1@amoeba:~]$ doe _self init
#
################################################################################

if [ $# -eq 0 ]				# if no args
then
    eval "$0 ${default_function}"	# re-exec "doe" with default function
else					# else call "doe" module
    call_module "$@" || echo "${RED}Usage:\n\tdoe <module>\n\n\tmodule = { $(list_modules) }${NC}"
fi

exit 0
