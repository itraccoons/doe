version: 2

jobs:

  shellcheck:
    working_directory: /work
    docker: [{image: 'docker:17.06-git'}]
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: false
      - run:
          name: "Run shellcheck"
          command: |
            dockerfile=.ci/dockerfiles/Dockerfile.shellcheck
            echo "COPY . ." >> $dockerfile
            docker build -f $dockerfile --tag cli-validator:$CIRCLE_BUILD_NUM .
            docker run --rm \
                cli-validator:$CIRCLE_BUILD_NUM \
                make shellcheck
  test-zsh:
    working_directory: /work
    docker: [{image: 'docker:17.06-git'}]
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: false
      - run:
          name: "Test doe in zsh"
          command: |
            dockerfile=.ci/dockerfiles/Dockerfile.test.zsh
            echo "COPY . ." >> $dockerfile
            docker build -f $dockerfile --tag cli-builder:$CIRCLE_BUILD_NUM .
            docker run --name \
                test-zsh-$CIRCLE_BUILD_NUM cli-builder:$CIRCLE_BUILD_NUM \
                make test-unit
  test-bash:
    working_directory: /work
    docker: [{image: 'docker:17.06-git'}]
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Test doe in bash"
          command: |
            dockerfile=.ci/dockerfiles/Dockerfile.test.bash
            echo "COPY . ." >> $dockerfile
            docker build -f $dockerfile --tag cli-builder:$CIRCLE_BUILD_NUM .
            docker run --name \
                test-bash-$CIRCLE_BUILD_NUM cli-builder:$CIRCLE_BUILD_NUM \
                make test-unit
#      - run:
#          name: "Get artifacts from containers"
#          command: |
#            mkdir -p /work/artifacts
#            docker cp \
#                test-zsh-$CIRCLE_BUILD_NUM:/root/.doe \
#                /work/artifacts/zsh
#            docker cp \
#                test-bash-$CIRCLE_BUILD_NUM:/root/.doe \
#                /work/artifacts/bash
#      - store_artifacts:
#          path: /work/artifacts

workflows:
  version: 2
  ci:
    jobs:
      - shellcheck
      - test-zsh:
          requires:
            - shellcheck
      - test-bash:
          requires:
            - shellcheck
