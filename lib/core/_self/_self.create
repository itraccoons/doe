#!/bin/bash --posix

help="${RED}doe _self create -m <MODULE> -f <FUNCTION> [-o <OPTIONS>] [-l <bash|perl|python>]${NC}"
_self_create_opts="m:f:o:l:"
mod_datadir=$DOE_MODDIR/_self/.data

_self_create()
{
    # parse agruments to variables arg_opt_<OPTION_LETTER>
    while getopts ${_self_create_opts} o; do
	case $o in
	  '?'|'h' ) echo "$help" && return 1 ;;
	  $o      ) eval arg_opt_$o=${OPTARG} ;;
	esac
    done

    # if no module specified (option -m)
    [ x$arg_opt_m = x ] && echo "$help"  && return 1

    mod=${arg_opt_m}
    func=${arg_opt_f:=help}
    opt=${arg_opt_o:=h}
    lang=${arg_opt_l:=bash}
    func_file=$DOE_MODDIR/$mod/$mod.$func
    func_file_template=${mod_datadir}/templates/$lang.function

    if [ -e "$func_file" ]; then
	echo "${RED}$func_file Already exist${NC}"
    else
	echo "Module: $mod"
	echo "Func:   $func"
	echo "File:   $func_file"
	echo "Lang:   $lang"
	echo "Run as: doe $mod $func"
	
	[ -d $DOE_MODDIR/$mod ] || mkdir $DOE_MODDIR/$mod
	
	eval "echo \"$(cat $func_file_template)\"" > $func_file
	
	[ "$lang" != "bash" ] && chmod +x $func_file
    fi
}

_self_create "$@" || exit 1
